{"version":3,"sources":["components/Button/Button.tsx","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["Button","props","name","onClick","className","type","GoodsList","state","isReversed","sortBy","minWordLength","reverse","setState","prevState","sortByOption","option","changeHandler","event","target","value","reset","getFilteredGoods","goods","filteredGoods","filter","good","length","sort","good1","good2","localeCompare","this","onChange","map","id","React","Component","preparedGoods","uuidv4","App","isListVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8b2c7439.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  name: string;\n  onClick: (option?: string) => void;\n}\n\nexport const Button: React.FC<Props> = (props) => {\n  const { name, onClick } = props;\n\n  return (\n    <button\n      className=\"button\"\n      type=\"button\"\n      onClick={() => onClick()}\n    >\n      {name}\n    </button>\n  );\n};\n","import React from 'react';\nimport { Button } from '../Button';\nimport './GoodsList.scss';\n\ninterface Props {\n  goods: Good[];\n}\n\ninterface State {\n  isReversed: boolean;\n  sortBy: string;\n  minWordLength: string;\n}\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: State = {\n    isReversed: false,\n    sortBy: '',\n    minWordLength: '1',\n  };\n\n  reverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  sortByOption = (option: string) => {\n    this.setState({ sortBy: option });\n  };\n\n  changeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ minWordLength: event.target.value });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: '',\n      isReversed: false,\n      minWordLength: '1',\n    });\n  };\n\n  getFilteredGoods = () => {\n    const { goods } = this.props;\n    const { isReversed, sortBy, minWordLength } = this.state;\n    let filteredGoods = goods.filter(good => (\n      good.name.length >= +minWordLength\n    ));\n\n    if (sortBy) {\n      filteredGoods = [...filteredGoods]\n        .sort(({ name: good1 }, { name: good2 }) => {\n          switch (sortBy) {\n            case 'alphabet':\n              return good1.localeCompare(good2);\n\n            case 'length':\n              return good1.length - good2.length;\n\n            default:\n              return 0;\n          }\n        });\n    }\n\n    if (isReversed) {\n      filteredGoods = [...filteredGoods].reverse();\n    }\n\n    return filteredGoods;\n  };\n\n  render() {\n    const { minWordLength } = this.state;\n    const filteredGoods = this.getFilteredGoods();\n\n    return (\n      <div>\n        <p>\n          Minimum length of the words in the list will be:\n        </p>\n        <select\n          value={minWordLength}\n          onChange={this.changeHandler}\n        >\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n          <option value=\"10\">10</option>\n        </select>\n        <ul className=\"list\">\n          {filteredGoods.map(good => (\n            <li key={good.id} className=\"list__item\">\n              {good.name}\n            </li>\n          ))}\n        </ul>\n        <Button\n          name=\"Reverse\"\n          onClick={this.reverse}\n        />\n        <Button\n          name=\"Sort alphabetically\"\n          onClick={() => this.sortByOption('alphabet')}\n        />\n        <Button\n          name=\"Sort by length\"\n          onClick={() => this.sortByOption('length')}\n        />\n        <Button\n          name=\"Reset\"\n          onClick={this.reset}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods: Good[] = goodsFromServer.map(good => (\n  {\n    name: good,\n    id: uuidv4(),\n  }\n));\n\ninterface State {\n  goods: Good[];\n  isListVisible: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: preparedGoods,\n    isListVisible: false,\n  };\n\n  showList = () => {\n    this.setState((prevState) => ({\n      isListVisible: !prevState.isListVisible,\n    }));\n  };\n\n  render() {\n    const { isListVisible, goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isListVisible\n          ? <GoodsList goods={goods} />\n          : (\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.showList}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}