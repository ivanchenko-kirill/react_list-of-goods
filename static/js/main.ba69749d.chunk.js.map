{"version":3,"sources":["components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","state","isReversed","sortBy","minWordLength","reverse","setState","prevState","sortByAlphabet","sortByLength","changeHandler","event","target","value","reset","goods","this","props","filteredGoods","filter","good","name","length","sort","good1","good2","localeCompare","onChange","className","map","id","type","onClick","React","Component","preparedGoods","uuidv4","App","isListVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"+QAaaA,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,OAAQ,GACRC,cAAe,KAJnB,EAOEC,QAAU,WACR,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,YAAaK,EAAUL,gBAT7B,EAaEM,eAAiB,WACf,EAAKF,SAAS,CAAEH,OAAQ,cAd5B,EAiBEM,aAAe,WACb,EAAKH,SAAS,CAAEH,OAAQ,YAlB5B,EAqBEO,cAAgB,SAACC,GACf,EAAKL,SAAS,CAAEF,cAAeO,EAAMC,OAAOC,SAtBhD,EAyBEC,MAAQ,WACN,EAAKR,SAAS,CACZH,OAAQ,GACRD,YAAY,EACZE,cAAe,OA7BrB,4CAiCE,WACE,IAAQW,EAAUC,KAAKC,MAAfF,MACR,EAA8CC,KAAKf,MAA3CC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,cACtBc,EAAgBH,EAAMI,QAAO,SAAAC,GAAI,OACrCA,EAAKC,KAAKC,SAAWlB,KAoBvB,OAjBAc,EAAcK,MAAK,cAAuC,IAA9BC,EAA6B,EAAnCH,KAAuBI,EAAY,EAAlBJ,KACrC,OAAQlB,GACN,IAAK,WACH,OAAOqB,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMF,OAASG,EAAMH,OAE9B,QACE,OAAO,MAITpB,GACFgB,EAAcb,UAId,gCACE,iFAGA,yBACEQ,MAAOT,EACPuB,SAAUX,KAAKN,cAFjB,UAIE,wBAAQG,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,mBAEF,oBAAIe,UAAU,OAAd,SACGV,EAAcW,KAAI,SAAAT,GAAI,OACrB,oBAAkBQ,UAAU,aAA5B,SACGR,EAAKC,MADCD,EAAKU,SAKlB,wBACEF,UAAU,SACVG,KAAK,SACLC,QAAShB,KAAKX,QAHhB,qBAOA,wBACEuB,UAAU,SACVG,KAAK,SACLC,QAAShB,KAAKR,eAHhB,iCAOA,wBACEoB,UAAU,SACVG,KAAK,SACLC,QAAShB,KAAKF,MAHhB,mBAOA,wBACEc,UAAU,SACVG,KAAK,SACLC,QAAShB,KAAKP,aAHhB,mCAzGR,GAA+BwB,IAAMC,WCK/BC,EAb4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAG4CN,KAAI,SAAAT,GAAI,MACpD,CACEC,KAAMD,EACNU,GAAIM,kBA2COC,E,4MAjCbpC,MAAe,CACbc,MAAOoB,EACPG,eAAe,G,EAGjBC,SAAW,WACT,EAAKjC,UAAS,SAACC,GAAD,MAAgB,CAC5B+B,eAAgB/B,EAAU+B,mB,4CAI9B,WACE,MAAiCtB,KAAKf,MAA9BqC,EAAR,EAAQA,cAAevB,EAAvB,EAAuBA,MAEvB,OACE,sBAAKa,UAAU,MAAf,UACE,uCACCU,EACG,cAAC,EAAD,CAAWvB,MAAOA,IAElB,wBACEa,UAAU,SACVG,KAAK,SACLC,QAAShB,KAAKuB,SAHhB,0B,GArBMN,IAAMC,WC3BxBM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ba69749d.chunk.js","sourcesContent":["import React from 'react';\nimport './GoodsList.scss';\n\ninterface Props {\n  goods: Good[];\n}\n\ninterface State {\n  isReversed: boolean;\n  sortBy: string;\n  minWordLength: string;\n}\n\nexport class GoodsList extends React.Component<Props, State> {\n  state: State = {\n    isReversed: false,\n    sortBy: '',\n    minWordLength: '1',\n  };\n\n  reverse = () => {\n    this.setState(prevState => ({\n      isReversed: !prevState.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortBy: 'alphabet' });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  changeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ minWordLength: event.target.value });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: '',\n      isReversed: false,\n      minWordLength: '1',\n    });\n  };\n\n  render() {\n    const { goods } = this.props;\n    const { isReversed, sortBy, minWordLength } = this.state;\n    const filteredGoods = goods.filter(good => (\n      good.name.length >= +minWordLength\n    ));\n\n    filteredGoods.sort(({ name: good1 }, { name: good2 }) => {\n      switch (sortBy) {\n        case 'alphabet':\n          return good1.localeCompare(good2);\n\n        case 'length':\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      filteredGoods.reverse();\n    }\n\n    return (\n      <div>\n        <p>\n          Minimum length of the words in the list will be:\n        </p>\n        <select\n          value={minWordLength}\n          onChange={this.changeHandler}\n        >\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n          <option value=\"10\">10</option>\n        </select>\n        <ul className=\"list\">\n          {filteredGoods.map(good => (\n            <li key={good.id} className=\"list__item\">\n              {good.name}\n            </li>\n          ))}\n        </ul>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.reverse}\n        >\n          Reverse\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods: Good[] = goodsFromServer.map(good => (\n  {\n    name: good,\n    id: uuidv4(),\n  }\n));\n\ninterface State {\n  goods: Good[];\n  isListVisible: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    goods: preparedGoods,\n    isListVisible: false,\n  };\n\n  showList = () => {\n    this.setState((prevState) => ({\n      isListVisible: !prevState.isListVisible,\n    }));\n  };\n\n  render() {\n    const { isListVisible, goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isListVisible\n          ? <GoodsList goods={goods} />\n          : (\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={this.showList}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}